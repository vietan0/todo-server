// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider                  = "prisma-erd-generator"
  output                    = "./erd.svg"
  theme                     = "dark"
  includeRelationFromFields = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  email     String    @unique @db.VarChar(255)
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[]
}

model Project {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks     Task[]
}

model Task {
  id           String   @id @default(uuid()) @db.Uuid
  name         String   @db.VarChar(255)
  completed    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  projectId    String   @db.Uuid
  project      Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  parentTaskId String?  @db.Uuid
  parentTask   Task?    @relation("TaskSubTasks", fields: [parentTaskId], references: [id], onDelete: Cascade)
  subTasks     Task[]   @relation("TaskSubTasks")
}
